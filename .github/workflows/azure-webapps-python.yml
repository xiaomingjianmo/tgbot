name: Deploy Telegram bot to Azure Web App

env:
  AZURE_WEBAPP_NAME: tgbot   # ← 改成你的 Azure Web App 名字
  PYTHON_VERSION: '3.10'

于:
  push:
    分支: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 使用最新的 setup-python，并启用 pip 缓存
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      # 让 Azure 的 Oryx 去做最终构建，这里只验证依赖能装上（可选）
      - name: Install dependencies (sanity check)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 打包工件（不包含虚拟环境）
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: |
            .
            !venv/
            !.git/
            !.github/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: none
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: .

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
